namespace B {
    class C {
        public $D = 'E';
        public function getClass() {
            return get_class($this);
        }
    }

    $className = 'B\\C';

    if (class_exists('B\\C'))     echo 'OK';
    if (class_exists($className)) echo 'OK';

    if (property_exists('B\\C', 'D'))     echo 'OK';
    if (property_exists($className, 'D')) echo 'OK';
    if (property_exists(new \B\C, 'D'))   echo 'OK';

    $class = new C;
    if ('B\\C' === $class->getClass()) echo 'OK';
}
---
class B_C
{
    public $D = 'E';
    public function getClass()
    {
        return strtr(get_class($this), '_', '\\');
    }
}
$className = 'B\\C';
if (class_exists('B_C')) {
    echo 'OK';
}
if (class_exists(strtr($className, '\\', '_'))) {
    echo 'OK';
}
if (property_exists('B_C', 'D')) {
    echo 'OK';
}
if (property_exists(is_string($className) ? strtr($className, '\\', '_') : $className, 'D')) {
    echo 'OK';
}
if (property_exists(is_string(($_value_%x = new B_C())) ? strtr($_value_%x, '\\', '_') : $_value_%x, 'D')) {
    echo 'OK';
}
$class = new B_C();
if ('B\\C' === $class->getClass()) {
    echo 'OK';
}
---
OKOKOKOKOKOK